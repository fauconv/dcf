#!/bin/bash

#
# const
#
PHP_VER=5.5.9 #PHP minimum version for drupal
DRUPAL_ANGULAR_URL=https://github.com/fauconv/indus_drupal8_angular2.git
DRUPAL_ANGULAR_TAG=master

#
# showHelp
#
function showHelp {
  name=$(basename $0)
  echo ""
  echo ""
  echo "usage : $name <command> <args>"
  echo ""
  echo "* Commands :"
  echo ""
  echo "  $name create <params>   : create a multisite drupal project for development. You have to git init, commit and push your project to save it after create "
  echo "  $name checkout <params> : get an already created multisite drupal project from a git for development or production (TODO)"
  echo "  $name site create <params>  : create and install a new website in the project."
  echo "  $name site install <params> : install a site already created for development after a git clone of the project"
  echo "  $name site build <params>  : compil and build a site frontend"
  echo "  $name package : create a package for deployment in production of a project"
  echo "  $name site package : create a package for deployment in production of a project"
  echo "  $name update  : update the project in production or dev"
  echo "  $name site update  : update a site in production or dev"
  echo ""
  echo ""
  echo "* create :"
  echo ""
  echo "  $name create project-name [project-description]"
  echo ""
  echo ""
  exit 1
}

#
# checkGit
#
function checkGit {
  if ! command -v git >/dev/null 2>&1; then
    echo ""
    echo ""
    echo "git must be installed and define in the \$PATH variable"
    echo ""
    echo ""
    exit 1
  fi
}

#
# checkPHP
#
function version_gt {
  test "$(echo "$@" | tr " " "\n" | sort -V | head -n 1)" != "$1";
}
function checkPHP {
  if ! command -v php >/dev/null 2>&1; then
    echo ""
    echo ""
    echo "php must be installed and define in the \$PATH variable"
    echo ""
    echo ""
    exit 1
  fi
  phpver=`php -v |grep -Eow '^PHP [^ ]+' |gawk '{ print $2 }'`
  echo "Current PHP version : $phpver"
  if version_gt $PHP_VER $phpver; then
    echo ""
    echo ""
    echo "php version must be greeter than $PHP_VER"
    echo ""
    echo ""
    exit 1
  fi
}

#
# checkComposer
#
function checkConposer {
  echo "CheckComposer:"
  if [ ! -f "composer.phar" ]; then
    cd scripts
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php composer-setup.php
    rm composer-setup.php
    cd ..
  fi
}


#
# create
#
function create {
  if [ "$2" = "" ]; then
      echo "project's name missing"
      showHelp;
  fi
  checkPHP
  if [ ! -f "composer.json" ]; then
    if [ -d ".git" ]; then
      echo ""
      echo ""
      echo "Can not create project from an existing git directory"
      echo ""
      echo ""
      exit 1
    fi
    checkGit
    echo "git clone $DRUPAL_ANGULAR_URL --single-branch --branch $DRUPAL_ANGULAR_TAG"
    git clone $DRUPAL_ANGULAR_URL --single-branch --branch $DRUPAL_ANGULAR_TAG clone
    rm -rf clone/.git
    mv clone/* . 2> /dev/null
    mv clone/.* . 2> /dev/null
    rm -rf clone
  fi
  echo "setup project $2..."
  sed "s|\"name\" *: *\".*\"|\"name\": \"$2\"|" composer.json > composer.json2
  sed "s|\"name\" *: *\".*\"|\"name\": \"$2\"|" package.json > package.json2
  sed "s|\"description\" *: *\".*\"|\"description\": \"$3\"|" composer.json2 > composer.json
  sed "s|\"description\" *: *\".*\"|\"description\": \"$3\"|" package.json2 > package.json
  rm composer.json2 package.json2
  install
  rm $1
}

#
# install
#
function install {
  checkConposer
  echo "Composer install:"
  php scripts/composer.phar install
  echo "NPM install:"
  vendor/bin/npm install
}

#
# build
#
function build {
  cd ..
}

#
# package
#
function package {
  cd ..
}

#
# deploy
#
function deploy {
  cd ..
}

#
# update
#
function update {
  cd ..
}

#
# main
#
cd $(dirname $0)
if [ "$1" = "" ]; then
    showHelp;
fi

case $1 in
  create )  create $0 $2 $3
            ;;
  checkout ) checkout $2
            ;;
  build ) build
            ;;
  package ) package
            ;;
  deploy )  deploy
            ;;
  update )  update
            ;;
  site ) site $2
            ;;
       * )  
            echo "unknown command : $1"
            showHelp
            ;;
esac
exit 0
